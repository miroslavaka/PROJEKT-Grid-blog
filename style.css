/* nejsme vcerejsi, pouzivame moderni box model */
html {
  box-sizing: border-box;
}
*,
:after,
:before {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 30px;
  font-family: 'Alice', serif;
  font-size: 18px;
  line-height: 1.5;
}

h1,
h2,
h3 {
  font-family: 'Kaushan Script', cursive;
  font-weight: normal;
  margin: 0;
}

blockquote {
  font-family: 'Kaushan Script', cursive;
}

/* --------------------------------------------------- */

/* barvy */
:root {
  --svetla: #edf3f5;
  --seda: #b2bec3;
  --tmava: #636e72;
  --oranzova: #ee5a24;
  --cervena: #ea2027;
  --zluta: #f79f1f;
  --zelena: #a3cb38;
  --limetka: #c4e538;
}

/*
	Všimni si, jak jsou zde nadefinované barvy.
	Potřebný kód barvy si odtamtud můžeš vyzobnout a použít
	ve svém kódu, ale existuje i lepší způsob.

  CSS custom properties, někdy také označované jako CSS
	variables (CSS proměnné), je způsob, jak si	pojmenovat
	nějakou hodnotu a potom ji v kódu opakovaně používat.
	Často se používá právě pro barvy a další "nastavení".

	Když si chci nějakou hodnotu nadefinovat, použiji zápis
	--mujnazev: hodnota
	Když chci, abych mohl hodnotu používat všude v CSS,
	založím ji uvnitř selektoru :root, takže např.:
	:root {
		--mojebarva: #ff8800;
	}

	Chci-li potom dál v CSS hodnotu použít, stačí použít funkci var a v závorce název proměnné.Např.:
	.odstavec {
		color: var(--mojebarva);
	}

	Nemusím si tak pamatovat kódy barev nebo neustále v CSS jezdit nahoru a dolů, abych si je odněkud zkopíroval.

	Více o CSS custom properties:
	- https://www.w3schools.com/css/css3_variables.asp
	- https://css-tricks.com/patterns-for-practical-css-custom-properties-use/
	- https://www.smashingmagazine.com/2017/04/start-using-css-custom-properties/
*/
body {
  padding-left: 0;
  padding-right: 0;
  font-family: 'Alice', serif;
  margin: 0;
}

.blog {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 4fr 2fr;
  column-gap: 40px;
  padding: 20px;
}
header,
h1,
h2,
p,
footer {
  grid-column: 2/3;
}
figure,
figcaption,
blockquote {
  grid-column: 1/4;
}
header p {
  color: var(--seda);
}
h1,
h2 {
  color: var(--zelena);
  font-family: 'Kaushan Script', cursive;
  text-align: center;
}
h1 {
  font-size: 60px;
}
blockquote {
  color: var(--seda);
  font-family: 'Kaushan Script', cursive;
  font-size: xx-large;
  text-align: center;
  margin: 0;
}
blockquote::before {
  content: '';
  display: block;
  width: 80px;
  border-top: 2px solid var(--limetka);
  margin: 10px auto;
}
blockquote::after {
  content: '';
  display: block;
  width: 80px;
  border-bottom: 2px solid var(--limetka);
  margin: 10px auto;
}
figure {
  margin: 0;
}
figure img {
  width: 100%;
}
figcaption,
footer,
footer a {
  color: var(--seda);
}
.tip-vlevo {
  grid-column: 1/2;
}
.tip-vpravo {
  grid-column: 3/4;
}
.tip-vlevo,
.tip-vpravo {
  padding: 10px;
  color: var(--tmava);
  background-color: var(--svetla);
  text-align: center;
  border-right: 5px solid var(--zluta);
}
.blog .tip-vlevo:not(:last-child) {
  margin-bottom: 70px;
}
.tip-vpravo {
  margin-bottom: 70px;
}
.tip-vlevo a,
.tip-vpravo a {
  color: var(--oranzova);
}
.tip-vlevo img {
  width: 100%;
}
